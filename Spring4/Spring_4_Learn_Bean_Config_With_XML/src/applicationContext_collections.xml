<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.3.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">

	<!-- ############################################ -->
	<!-- Spring 配置集合属性 配置 -->
	<!-- ############################################ -->

    <!-- ↓↓↓↓↓↓↓↓↓↓ 测试如何配置集合属性  START ↓↓↓↓↓↓↓↓↓↓  -->
    <!-- 通过构造方法来配置Bean 的属性 -->
    <bean id="car3" class="com.spring4.learn.poio.collections.CarForCollection">
        <!-- index 构造方法中的参数索引 -->
        <constructor-arg value="Audi" index="0"></constructor-arg> 
        <constructor-arg value="ShangHai" index="1"></constructor-arg>
        <constructor-arg value="300000" index="2"></constructor-arg>
    </bean>
    
    <bean id="car4" class="com.spring4.learn.poio.collections.CarForCollection"> 
        <!-- 使用构造器属性值可以指定参数的位置和参数类型, 以区分重载的构造器  -->
        <constructor-arg value="Baoma宝马" type="java.lang.String" index="1"></constructor-arg> 
        
        <constructor-arg type="java.lang.String">
            <!-- 注入的值可以在属性中定义, 也可以在 value 子节点中定义  -->
            <!-- 若字面值中包含特殊字符, 可以用<![CDATA[]]> 把字面值包裹起来 -->
            <value><![CDATA[<ShangHai^测试>]]></value> 
        </constructor-arg>
        
        <constructor-arg type="int">
            <!-- 注入的值可以在属性中定义, 也可以在子节点中定义  -->
            <value>249</value>
        </constructor-arg>
        
        <property name="maxSpeed" value="420"/>
        <property name="price" value="300000"/>
    </bean>

    <bean id="person5" class="com.spring4.learn.poio.collections.PersonForCollection">
        <property name="name" value="测试人员名称"></property>
        <property name="age" value="27"></property>
        <property name="carList">
        	<!-- 使用 <list> 节点为 List 类型的属性赋值 -->
            <list>
            	<!-- 通过 <ref> 指定对其他 Bean 的引用 -->
                <ref bean="car3"/>
                <ref bean="car4"/>
                
                <!-- 通过<bean> 指定内置 Bean 定义 -->
                <!-- 内部 Bean 不能被外部引用, 只能在内部使用 -->
	            <bean class="com.spring4.learn.poio.collections.CarForCollection">
	                <constructor-arg value="Ford_Inner" index="0"></constructor-arg> 
	                <constructor-arg value="Changan_Inner" index="1"></constructor-arg>
	                <constructor-arg value="200135" type="double"></constructor-arg>
	            </bean>
            </list>
        </property>
        
        <property name="hobbyList">
        	<list>
        		<!-- 可以通过 <value> 指定简单的常量值 -->
        		<value>basketball</value>
        		<value>football</value>
        		<value>tennis</value>
        	</list>
        </property>
    </bean>
    
    <!-- 配置Map属性值 -->
    <bean id="person6" class="com.spring4.learn.poio.collections.PersonForMap">
		<property name="name" value="测试人员名称_Map"></property>
        <property name="age" value="27"></property>
        
        <property name="carMap">
        	<!-- 使用<map>节点及<map>的子节点<entry>配置 java.unil.Map类型变量-->
        	<map>
        		<entry key="Fir" value-ref="car3"></entry>
        		
        		<entry key="Sec" value-ref="car4"></entry>
        	</map>
        </property>
    </bean>
    
    <!-- 配置Properties属性值 -->
    <bean id="dataSource" class="com.spring4.learn.poio.collections.DataSourceForProperties">
    	<property name="properties">
    		<!-- 使用<props>节点及<props>的子节点<prop>配置 java.unil.Properties类型变量-->
    		<props>
    			<prop key="user">root</prop>
    			<prop key="passwd"><![CDATA[1246<>sdda]]></prop>
    			<prop key="jdbcUrl">jdbc:mysql://xxxx.test</prop>
    			<prop key="driverClass">com.mysql.jdbc.Driver</prop>
    		</props>
    	</property>
    </bean>
    
    
    <!-- ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ Util:XXX Start ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ -->
    <!-- 配置单例的及合Bean, 以供多个Bean引用 需要导入 util 命名空间 -->
    <util:list id="hobbyListBean">
		<value>basketball_xxx</value>
        <value>football_xxx</value>
        <value>tennis_xxx</value>
    </util:list>
    
    <util:list id="carListBean">
		<ref bean="car3"/>
		<ref bean="car4"/>
		
		<bean class="com.spring4.learn.poio.collections.CarForCollection">
            <constructor-arg value="Ford_List_Inner" index="0"></constructor-arg> 
            <constructor-arg value="Changan_List_Inner" index="1"></constructor-arg>
            <constructor-arg value="200235" type="double"></constructor-arg>
        </bean>
    </util:list>
    
    <util:map id="mapValueBean">
    	<entry key="Fir_bean" value-ref="car3"></entry>
    	<entry key="Sec_bean" value-ref="car3"></entry>
    </util:map>
    
    <util:properties id="dbProBean">
    	<prop key="user">root</prop>
 		<prop key="passwd"><![CDATA[1246<>sdda]]></prop>
 		<prop key="jdbcUrl">jdbc:mysql://xxxx.test</prop>
 		<prop key="driverClass">com.mysql.jdbc.Driver</prop>
    </util:properties>
    
    <bean id="person7" class="com.spring4.learn.poio.collections.PersonForUtil">
    	<property name="name" value="测试人员名称_Util"></property>
        <property name="age" value="27"></property>
        
        <property name="hobbyList" ref="hobbyListBean"></property>
        <property name="carList" ref="carListBean"></property>
        <property name="carMap" ref="mapValueBean"></property>
        <property name="properties" ref="dbProBean"></property>
    </bean>
    
    <!-- ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ Util:XXX End ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ -->
    
    <!-- ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ 通过 p 的命名空间为Bean的属性赋值 Start ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ -->
    <!-- 通过 p 的命名空间为Bean的属性赋值, 需要导入 p 命名空间 -->
    
    <bean id="person8" class="com.spring4.learn.poio.collections.PersonForUtil" 
    	  p:name="测试人员名称_P" 
    	  p:age="32" 
    	  p:hobbyList-ref="hobbyListBean" 
    	  p:carList-ref="carListBean" 
    	  p:carMap-ref="mapValueBean" 
    	  p:properties-ref="dbProBean"/>
    
    <!-- ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ 通过 p 的命名空间为Bean的属性赋值 End ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ -->
    
    
    

</beans>
